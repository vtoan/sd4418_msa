# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
  repositories:
    - repository: infrasRepo
      type: github
      endpoint: vtoan
      name: vtoan/sd4418_azure_infrastructure

pool: Test Pool 1

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '110dd676-90e9-404f-bc17-1ec5667c8b19'
  containerRegistry: 'examplearcdrum.azurecr.io'
  imagePullSecret: "example-arc-drum-auth"
  tag: '86'
  # tag: '$(Build.BuildId)'

  frontendImageName: 'msa-frontend'
  frontendPath: '$(Build.SourcesDirectory)/src/frontend'

  backendImageName: 'msa-backend'
  backendPath: '$(Build.SourcesDirectory)/src/backend'

stages:
# - stage: Build
#   displayName: Build and push stage
#   jobs:
#   - job: BuildFE
#     displayName: Build Frontend
#     steps:
#     - checkout: self
#     - task: Docker@2
#       displayName: Build and push an image to container registry
#       inputs:
#         command: buildAndPush
#         repository: $(frontendImageName)
#         dockerfile: $(frontendPath)/Dockerfile
#         containerRegistry: $(dockerRegistryServiceConnection)
#         tags: |
#           $(tag)
  
#   - job: BuildBE
#     displayName: Build Backend
#     steps:
#     - checkout: self
#     - task: Docker@2
#       displayName: Build and push an image to container registry
#       inputs:
#         command: buildAndPush
#         repository: $(backendImageName)
#         dockerfile: $(backendPath)/Dockerfile
#         containerRegistry: $(dockerRegistryServiceConnection)
#         tags: |
#           $(tag)

- stage: Deploy
  displayName: Deploy stage
  # dependsOn: Build

  jobs:
  - deployment: Deploy
    displayName: Deploy Frontend
    environment: Test
    strategy:
      runOnce:
        deploy:
          steps:
            - checkout: infrasRepo
            - task: KubernetesManifest@0
              displayName: Create imagePullSecret
              inputs:
                action: createSecret
                secretName: $(imagePullSecret)
                dockerRegistryEndpoint: $(dockerRegistryServiceConnection)
                kubernetesServiceConnection: cluster-concise-seasnail-default


            - task: KubernetesManifest@0
              displayName: Deploy to Kubernetes cluster
              inputs:
                action: deploy
                manifests: |
                  $(Build.SourcesDirectory)/manifests/frontend.yaml
                imagePullSecrets: |
                  $(imagePullSecret)
                containers: |
                  $(containerRegistry)/$(frontendImageName):$(tag)
                kubernetesServiceConnection: cluster-concise-seasnail-default

